//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFwebclient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="employee", Namespace="http://schemas.datacontract.org/2004/07/emplib")]
    [System.SerializableAttribute()]
    public partial class employee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int deptidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ecodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string enameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int salaryField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int deptid {
            get {
                return this.deptidField;
            }
            set {
                if ((this.deptidField.Equals(value) != true)) {
                    this.deptidField = value;
                    this.RaisePropertyChanged("deptid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ecode {
            get {
                return this.ecodeField;
            }
            set {
                if ((this.ecodeField.Equals(value) != true)) {
                    this.ecodeField = value;
                    this.RaisePropertyChanged("ecode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ename {
            get {
                return this.enameField;
            }
            set {
                if ((object.ReferenceEquals(this.enameField, value) != true)) {
                    this.enameField = value;
                    this.RaisePropertyChanged("ename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int salary {
            get {
                return this.salaryField;
            }
            set {
                if ((this.salaryField.Equals(value) != true)) {
                    this.salaryField = value;
                    this.RaisePropertyChanged("salary");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IEmpservice")]
    public interface IEmpservice {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpservice/GetEmployees", ReplyAction="http://tempuri.org/IEmpservice/GetEmployeesResponse")]
        WCFwebclient.ServiceReference1.employee[] GetEmployees();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpservice/GetEmployees", ReplyAction="http://tempuri.org/IEmpservice/GetEmployeesResponse")]
        System.Threading.Tasks.Task<WCFwebclient.ServiceReference1.employee[]> GetEmployeesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpservice/addfield", ReplyAction="http://tempuri.org/IEmpservice/addfieldResponse")]
        void addfield(WCFwebclient.ServiceReference1.employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpservice/addfield", ReplyAction="http://tempuri.org/IEmpservice/addfieldResponse")]
        System.Threading.Tasks.Task addfieldAsync(WCFwebclient.ServiceReference1.employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpservice/DeleteEmpById", ReplyAction="http://tempuri.org/IEmpservice/DeleteEmpByIdResponse")]
        void DeleteEmpById(int ecode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpservice/DeleteEmpById", ReplyAction="http://tempuri.org/IEmpservice/DeleteEmpByIdResponse")]
        System.Threading.Tasks.Task DeleteEmpByIdAsync(int ecode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpservice/UpdateEmpById", ReplyAction="http://tempuri.org/IEmpservice/UpdateEmpByIdResponse")]
        void UpdateEmpById(WCFwebclient.ServiceReference1.employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpservice/UpdateEmpById", ReplyAction="http://tempuri.org/IEmpservice/UpdateEmpByIdResponse")]
        System.Threading.Tasks.Task UpdateEmpByIdAsync(WCFwebclient.ServiceReference1.employee emp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpservice/GetEmpById", ReplyAction="http://tempuri.org/IEmpservice/GetEmpByIdResponse")]
        WCFwebclient.ServiceReference1.employee GetEmpById(int ecode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpservice/GetEmpById", ReplyAction="http://tempuri.org/IEmpservice/GetEmpByIdResponse")]
        System.Threading.Tasks.Task<WCFwebclient.ServiceReference1.employee> GetEmpByIdAsync(int ecode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmpserviceChannel : WCFwebclient.ServiceReference1.IEmpservice, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmpserviceClient : System.ServiceModel.ClientBase<WCFwebclient.ServiceReference1.IEmpservice>, WCFwebclient.ServiceReference1.IEmpservice {
        
        public EmpserviceClient() {
        }
        
        public EmpserviceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmpserviceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmpserviceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmpserviceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCFwebclient.ServiceReference1.employee[] GetEmployees() {
            return base.Channel.GetEmployees();
        }
        
        public System.Threading.Tasks.Task<WCFwebclient.ServiceReference1.employee[]> GetEmployeesAsync() {
            return base.Channel.GetEmployeesAsync();
        }
        
        public void addfield(WCFwebclient.ServiceReference1.employee emp) {
            base.Channel.addfield(emp);
        }
        
        public System.Threading.Tasks.Task addfieldAsync(WCFwebclient.ServiceReference1.employee emp) {
            return base.Channel.addfieldAsync(emp);
        }
        
        public void DeleteEmpById(int ecode) {
            base.Channel.DeleteEmpById(ecode);
        }
        
        public System.Threading.Tasks.Task DeleteEmpByIdAsync(int ecode) {
            return base.Channel.DeleteEmpByIdAsync(ecode);
        }
        
        public void UpdateEmpById(WCFwebclient.ServiceReference1.employee emp) {
            base.Channel.UpdateEmpById(emp);
        }
        
        public System.Threading.Tasks.Task UpdateEmpByIdAsync(WCFwebclient.ServiceReference1.employee emp) {
            return base.Channel.UpdateEmpByIdAsync(emp);
        }
        
        public WCFwebclient.ServiceReference1.employee GetEmpById(int ecode) {
            return base.Channel.GetEmpById(ecode);
        }
        
        public System.Threading.Tasks.Task<WCFwebclient.ServiceReference1.employee> GetEmpByIdAsync(int ecode) {
            return base.Channel.GetEmpByIdAsync(ecode);
        }
    }
}
